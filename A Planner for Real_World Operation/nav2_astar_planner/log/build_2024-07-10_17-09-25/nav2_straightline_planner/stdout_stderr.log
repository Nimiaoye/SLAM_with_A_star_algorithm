-- The C compiler identification is GNU 11.4.0
-- The CXX compiler identification is GNU 11.4.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 1.3.9 (/opt/ros/humble/share/ament_cmake/cmake)
-- Found Python3: /usr/bin/python3 (found version "3.10.12") found components: Interpreter 
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found rclcpp: 16.0.9 (/opt/ros/humble/share/rclcpp/cmake)
-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)
-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)
-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 6.1.2 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
-- Found rmw_fastrtps_cpp: 6.2.6 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.2")  
-- Found FastRTPS: /opt/ros/humble/include  
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
-- Found rclcpp_action: 16.0.9 (/opt/ros/humble/share/rclcpp_action/cmake)
-- Found rclcpp_lifecycle: 16.0.9 (/opt/ros/humble/share/rclcpp_lifecycle/cmake)
-- Found visualization_msgs: 4.2.4 (/opt/ros/humble/share/visualization_msgs/cmake)
-- Found nav2_util: 1.1.15 (/opt/ros/humble/share/nav2_util/cmake)
-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)
-- Found Eigen3: TRUE (found version "3.4.0") 
-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target
-- Found nav2_costmap_2d: 1.1.15 (/opt/ros/humble/share/nav2_costmap_2d/cmake)
-- Found nav2_core: 1.1.15 (/opt/ros/humble/share/nav2_core/cmake)
-- Found ament_lint_auto: 0.12.11 (/opt/ros/humble/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: /home/pan/experiment_2/nav2_astar_planner/include
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/pan/experiment_2/nav2_astar_planner/build/nav2_straightline_planner
[ 50%] [32mBuilding CXX object CMakeFiles/nav2_straightline_planner_plugin.dir/src/straight_line_planner.cpp.o[0m
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:[m[K In member function â€˜[01m[Kvirtual nav_msgs::msg::Path nav2_straightline_planner::StraightLine::createPlan(const PoseStamped&, const PoseStamped&)[m[Kâ€™:
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:282:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass nav2_costmap_2d::Costmap2D[m[Kâ€™ has no member named â€˜[01m[KisInBounds[m[Kâ€™
  282 |       if (!costmap_->[01;31m[KisInBounds[m[K(nx, ny) || costmap_->getCost(nx, ny) >= nav2_costmap_2d::INSCRIBED_INFLATED_OBSTACLE) {
      |                      [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/11/memory:76[m[K,
                 from [01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:152[m[K:
/usr/include/c++/11/tuple: In instantiation of â€˜[01m[Kstd::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = nav2_straightline_planner::Node][m[Kâ€™:
[01m[K/usr/include/c++/11/tuple:1809:63:[m[K   required from â€˜[01m[Kstd::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = nav2_straightline_planner::Node][m[Kâ€™
[01m[K/usr/include/c++/11/ext/new_allocator.h:162:4:[m[K   required from â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, nav2_straightline_planner::Node>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false>][m[Kâ€™
[01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, nav2_straightline_planner::Node>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false>; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false> >][m[Kâ€™
[01m[K/usr/include/c++/11/bits/hashtable_policy.h:1878:36:[m[K   required from â€˜[01m[Kstd::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false> >; std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr = std::allocator<std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false> >::value_type*][m[Kâ€™
[01m[K/usr/include/c++/11/bits/hashtable.h:304:35:[m[K   required from â€˜[01m[Kstd::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, nav2_straightline_planner::Node>; _Alloc = std::allocator<std::pair<const int, nav2_straightline_planner::Node> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc = std::_Hashtable<int, std::pair<const int, nav2_straightline_planner::Node>, std::allocator<std::pair<const int, nav2_straightline_planner::Node> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hashtable_alloc][m[Kâ€™
[01m[K/usr/include/c++/11/bits/hashtable_policy.h:707:42:[m[K   required from â€˜[01m[Kstd::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, nav2_straightline_planner::Node>; _Alloc = std::allocator<std::pair<const int, nav2_straightline_planner::Node> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type = nav2_straightline_planner::Node; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type = int][m[Kâ€™
[01m[K/usr/include/c++/11/bits/unordered_map.h:980:20:[m[K   required from â€˜[01m[Kstd::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = nav2_straightline_planner::Node; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, nav2_straightline_planner::Node> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = nav2_straightline_planner::Node; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = int][m[Kâ€™
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:255:22:[m[K   required from here
[01m[K/usr/include/c++/11/tuple:1820:9:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Knav2_straightline_planner::Node::Node()[m[Kâ€™
 1820 |         [01;31m[Ksecond(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)[m[K
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:169:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Knav2_straightline_planner::Node::Node(int, int, double, double, nav2_straightline_planner::Node*)[m[Kâ€™
  169 |   [01;36m[KNode[m[K(int x_, int y_, double g, double f, Node *p = nullptr)
      |   [01;36m[K^~~~[m[K
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:169:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 0 provided
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr nav2_straightline_planner::Node::Node(const nav2_straightline_planner::Node&)[m[Kâ€™
  162 | struct [01;36m[KNode[m[K {
      |        [01;36m[K^~~~[m[K
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr nav2_straightline_planner::Node::Node(nav2_straightline_planner::Node&&)[m[Kâ€™
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
In file included from [01m[K/usr/include/c++/11/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/11/memory:76[m[K,
                 from [01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:152[m[K:
/usr/include/c++/11/tuple: In instantiation of â€˜[01m[Kstd::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {int&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = nav2_straightline_planner::Node][m[Kâ€™:
[01m[K/usr/include/c++/11/tuple:1809:63:[m[K   required from â€˜[01m[Kstd::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {int&&}; _Args2 = {}; _T1 = const int; _T2 = nav2_straightline_planner::Node][m[Kâ€™
[01m[K/usr/include/c++/11/ext/new_allocator.h:162:4:[m[K   required from â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, nav2_straightline_planner::Node>; _Args = {const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false>][m[Kâ€™
[01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, nav2_straightline_planner::Node>; _Args = {const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false>; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false> >][m[Kâ€™
[01m[K/usr/include/c++/11/bits/hashtable_policy.h:1878:36:[m[K   required from â€˜[01m[Kstd::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false> >; std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr = std::allocator<std::__detail::_Hash_node<std::pair<const int, nav2_straightline_planner::Node>, false> >::value_type*][m[Kâ€™
[01m[K/usr/include/c++/11/bits/hashtable.h:304:35:[m[K   required from â€˜[01m[Kstd::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, nav2_straightline_planner::Node>; _Alloc = std::allocator<std::pair<const int, nav2_straightline_planner::Node> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc = std::_Hashtable<int, std::pair<const int, nav2_straightline_planner::Node>, std::allocator<std::pair<const int, nav2_straightline_planner::Node> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hashtable_alloc][m[Kâ€™
[01m[K/usr/include/c++/11/bits/hashtable_policy.h:734:42:[m[K   required from â€˜[01m[Kstd::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = int; _Pair = std::pair<const int, nav2_straightline_planner::Node>; _Alloc = std::allocator<std::pair<const int, nav2_straightline_planner::Node> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type = nav2_straightline_planner::Node; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type = int][m[Kâ€™
[01m[K/usr/include/c++/11/bits/unordered_map.h:984:20:[m[K   required from â€˜[01m[Kstd::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = int; _Tp = nav2_straightline_planner::Node; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, nav2_straightline_planner::Node> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = nav2_straightline_planner::Node; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = int][m[Kâ€™
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:290:109:[m[K   required from here
[01m[K/usr/include/c++/11/tuple:1820:9:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Knav2_straightline_planner::Node::Node()[m[Kâ€™
 1820 |         [01;31m[Ksecond(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)[m[K
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:169:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Knav2_straightline_planner::Node::Node(int, int, double, double, nav2_straightline_planner::Node*)[m[Kâ€™
  169 |   [01;36m[KNode[m[K(int x_, int y_, double g, double f, Node *p = nullptr)
      |   [01;36m[K^~~~[m[K
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:169:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 0 provided
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr nav2_straightline_planner::Node::Node(const nav2_straightline_planner::Node&)[m[Kâ€™
  162 | struct [01;36m[KNode[m[K {
      |        [01;36m[K^~~~[m[K
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr nav2_straightline_planner::Node::Node(nav2_straightline_planner::Node&&)[m[Kâ€™
[01m[K/home/pan/experiment_2/nav2_astar_planner/src/straight_line_planner.cpp:162:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
gmake[2]: *** [CMakeFiles/nav2_straightline_planner_plugin.dir/build.make:76ï¼šCMakeFiles/nav2_straightline_planner_plugin.dir/src/straight_line_planner.cpp.o] é”™è¯¯ 1
gmake[1]: *** [CMakeFiles/Makefile2:137ï¼šCMakeFiles/nav2_straightline_planner_plugin.dir/all] é”™è¯¯ 2
gmake: *** [Makefile:146ï¼šall] é”™è¯¯ 2
